<div class="container d-flex align-items-center justify-content-center min-vh-100">
  <div class="w-100" style="max-width: 500px;">

    <h2 class="text-center mb-4">游댏 Log In</h2>

    <!-- Email & Password Login -->
    <div class="card shadow-sm mb-4">
      <div class="card-body">
        <h5 class="text-center mb-3">游닎 Email & Password Login</h5>

        <%= form_for(resource, as: resource_name, url: session_path(resource_name)) do |f| %>
          <div class="mb-3">
            <%= f.label :email, class: "form-label" %>
            <%= f.email_field :email, autofocus: true, autocomplete: "email", class: "form-control" %>
          </div>

          <div class="mb-3">
            <%= f.label :password, class: "form-label" %>
            <%= f.password_field :password, autocomplete: "current-password", class: "form-control" %>
          </div>

          <% if devise_mapping.rememberable? %>
            <div class="form-check mb-3">
              <%= f.check_box :remember_me, class: "form-check-input" %>
              <%= f.label :remember_me, class: "form-check-label" %>
            </div>
          <% end %>

          <div class="d-grid">
            <%= f.submit "Log in", class: "btn btn-primary fw-bold" %>
          </div>
        <% end %>
      </div>
    </div>

    <!-- Divider -->
    <div class="text-center mb-3">
      <strong>OR</strong>
    </div>

    <!-- Phone Number & OTP Login -->
    <div class="card shadow-sm">
      <div class="card-body">
        <h5 class="text-center mb-3">游님 Phone Number & OTP Login</h5>

        <%= form_with url: users_send_otp_path, method: :post, id: "otpForm", local: false do |f| %>
          <div class="mb-3">
            <%= f.label :phone_number, "Phone Number", class: "form-label" %>
            <%= f.text_field :phone_number, class: "form-control", placeholder: "Enter your phone number", required: true %>
          </div>

          <div class="d-grid">
            <%= f.submit "Send OTP", class: "btn btn-success fw-bold" %>
          </div>
        <% end %>
      </div>
    </div>

  </div>
</div>


<!-- Verify OTP Modal -->
<!-- Verify OTP Modal -->
<div class="modal fade" id="verifyOtpModal" tabindex="-1" aria-labelledby="verifyOtpModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="verifyOtpModalLabel">游댏 Verify OTP</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <%= form_with url: users_verify_otp_path, method: :post, id: "otpVerificationForm", local: true do |f| %>
          <div class="mb-3">
            <%= f.label :otp_code, "Enter OTP", class: "form-label" %>
            <%= f.text_field :otp_code, class: "form-control", placeholder: "Enter the OTP received", required: true %>
          </div>
          <%= f.hidden_field :phone_number, id: "hiddenPhoneNumber" %>

          <div class="d-grid">
            <button type="submit" class="btn btn-primary">
              Verify OTP
            </button>
          </div>
        <% end %>

        <!-- Resend OTP Section -->
        <div class="mt-3 text-center">
          <button id="resendOtpBtn" class="btn btn-link" disabled>Resend OTP in <span id="resendCountdown">15</span>s</button>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
    let countdownInterval;
    const countdownTime = 15; // Time for each cooldown

    // 游릭 Send OTP
    document.getElementById("otpForm").addEventListener("submit", function (event) {
        event.preventDefault();
        const phoneNumber = document.querySelector("#otpForm input[name='phone_number']").value;

        fetch('/users/send_otp', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
            },
            body: JSON.stringify({ phone_number: phoneNumber })
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    document.getElementById("hiddenPhoneNumber").value = phoneNumber;

                    const otpModal = new bootstrap.Modal(document.getElementById('verifyOtpModal'));
                    otpModal.show();
                    startCountdown();  // 游릭 Start countdown after OTP is sent
                } else {
                    alert(data.error);
                }
            })
            .catch(error => console.error("Error:", error));
    });

    // 游릭 Start Countdown Timer
    function startCountdown() {
        clearInterval(countdownInterval); // Clear any existing timer

        const resendButton = document.getElementById("resendOtpBtn");
        const countdownDisplay = document.getElementById("resendCountdown");

        let timeLeft = countdownTime;
        resendButton.disabled = true;
        countdownDisplay.textContent = timeLeft;
        resendButton.innerHTML = `Resend OTP in <span id="resendCountdown">${timeLeft}</span>s`;

        countdownInterval = setInterval(() => {
            timeLeft--;
            countdownDisplay.textContent = timeLeft;

            if (timeLeft <= 0) {
                clearInterval(countdownInterval);
                resendButton.disabled = false;
                resendButton.textContent = "Resend OTP";
            }
        }, 1000);
    }

    // 游릭 Resend OTP Logic
    document.getElementById("resendOtpBtn").addEventListener("click", function () {
        const phoneNumber = document.getElementById("hiddenPhoneNumber").value;

        fetch('/users/resend_otp', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
            },
            body: JSON.stringify({ phone_number: phoneNumber })
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert(data.message);

                    // 游릭 Start countdown again for multiple resend support
                    startCountdown();
                } else {
                    alert(data.error);
                }
            })
            .catch(error => console.error("Error:", error));
    });

    // 游릭 Verify OTP Logic
    document.getElementById("otpVerificationForm").addEventListener("submit", function (event) {
        event.preventDefault();

        const otpCode = document.querySelector("#otpVerificationForm input[name='otp_code']").value;
        const phoneNumber = document.getElementById("hiddenPhoneNumber").value;

        fetch('/users/verify_otp', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
            },
            body: JSON.stringify({ phone_number: phoneNumber, otp_code: otpCode })
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    window.location.href = data.redirect_path;
                } else {
                    alert(data.error);
                }
            })
            .catch(error => console.error("Error:", error));
    });

</script>
